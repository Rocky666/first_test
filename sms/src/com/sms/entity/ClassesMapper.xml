<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.sms.dao.ClassesMapper" >
  <resultMap id="BaseResultMap" type="com.sms.entity.Classes" >
    <id column="id" property="id" jdbcType="VARCHAR" />
    <result column="text" property="text" jdbcType="VARCHAR" />
    <result column="pid" property="pid" jdbcType="VARCHAR" />
    <result column="state" property="state" jdbcType="VARCHAR" />
    <result column="status" property="status" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, text, pid, state, status
  </sql>
  <sql id="selectAll_sql" >
    select 
    <include refid="Base_Column_List" />
    from classes  where 1=1
    <if test="classes.id !=null">
     and id like '%${classes.id}%'
    </if>
    <if test="classes.text!=null and classes.text !='' ">
      and text like '%${classes.text}%' 
    </if>
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from classes  
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <select id="selectAll" resultMap="BaseResultMap" >
   	<include refid="selectAll_sql" />
     limit #{pager.start},#{pager.end}
  </select>
  <select id="getCount" resultType="java.lang.Integer">
    select count(*) from (<include refid="selectAll_sql" />) c
  </select>
  
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from classes
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.sms.entity.Classes" >
    insert into classes (id, text, pid, 
      state, status)
    values (#{id,jdbcType=VARCHAR}, #{text,jdbcType=VARCHAR}, #{pid,jdbcType=VARCHAR}, 
      #{state,jdbcType=VARCHAR}, #{status,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.sms.entity.Classes" >
    insert into classes
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="text != null" >
        text,
      </if>
      <if test="pid != null" >
        pid,
      </if>
      <if test="state != null" >
        state,
      </if>
      <if test="status != null" >
        status,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="text != null" >
        #{text,jdbcType=VARCHAR},
      </if>
      <if test="pid != null" >
        #{pid,jdbcType=VARCHAR},
      </if>
      <if test="state != null" >
        #{state,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        #{status,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.sms.entity.Classes" >
    update classes
    <set >
      <if test="text != null" >
        text = #{text,jdbcType=VARCHAR},
      </if>
      <if test="pid != null" >
        pid = #{pid,jdbcType=VARCHAR},
      </if>
      <if test="state != null" >
        state = #{state,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.sms.entity.Classes" >
    update classes
    set text = #{text,jdbcType=VARCHAR},
      pid = #{pid,jdbcType=VARCHAR},
      state = #{state,jdbcType=VARCHAR},
      status = #{status,jdbcType=INTEGER}
    where id = #{id,jdbcType=VARCHAR}
  </update>
</mapper>